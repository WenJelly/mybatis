<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <!--
        核心配置文件中,标签的顺序
        configuration" must match "
        (properties?,settings?,typeAliases?,
        typeHandlers?,objectFactory?,objectWrapperFactory?
        ,reflectorFactory?,plugins?,environments?,
        databaseIdProvider?,mappers?)".
    -->

    <!--引用jdbc配置文件,这样下面就可以简写了 -->
    <properties resource="jdbc.properties"/>

    <!--设置MyBatis的全局设置-->
    <settings>
<!--        将下划线自动映射成驼峰 例如 emp_name:empName-->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
<!--        设置延迟加载   非常有用-->
        <setting name="lazyLoadingEnabled" value="true"/>
    </settings>


    <!-- 设置类型别名   -->
    <typeAliases>
        <!--不写alas就是默认为类名，且不区分大小写-->
        <!--
            typeAlias：设置某个类型的别名
            属性：
                type：设置需要设置别名的类型
                alias：设置某个类型的别名，若不设置该属性，那么该类型拥有默认的别名，即类名且不区分大小写
        -->
        <!--<typeAlias type="com.atguigu.User" alias="User"></typeAlias>-->
        <!--以包为单位，将包下所有的类型设置默认的类型别名，即类名且不区分大小写-->
        <package name="com.mybatis.pojo"/>
    </typeAliases>
    
    
    <!--
        environments:环境配置：事务管理器和数据源配置,配置多个连接数据库的环境
        属性
            default:设置默认使用的环境的id

    -->
    <environments default="development">

        <!--
            environment:配置某个具体的环境
            属性:
                id:表示连接数据库的环境的唯一标识,不能重复
        -->

        <environment id="development">
            <!--
              transactionManager:事务管理方式
              属性:
                type:"JDBC|MANAGED"
                JDBC:表示当前环境中,执行SQL时,使用的是JDBC中原生的事务管理方式,事务的提交或回滚需要手动处理
                MANAGED:被管理,例如Spring
        -->
            <transactionManager type="JDBC"/>

            <!--
                dataSource：配置数据源
                属性：
                    type：设置数据源的类型
                    type="POOLED|UNPOOLED|JNDI"
                    POOLED：表示使用数据库连接池缓存数据库连接，即会将创建的连接进行缓存，下次使用可以从缓存中直接获取，不需要重新创建
                    UNPOOLED：表示不使用数据库连接池，即每次使用连接都需要重新创建
                    JNDI：表示使用上下文中的数据源
            -->
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>

    <!-- 映射器 -->
    <mappers>
        <!--<mapper resource="mappers/UserMapper.xml"/>-->
        <!--
            以包为单位引入映射文件
            要求：
            1、mapper接口所在的包要和映射文件所在的包一致
            2、mapper接口要和映射文件的名字一致
        -->
        <package name="com.mybatis.mapper"/>
    </mappers>
</configuration>
